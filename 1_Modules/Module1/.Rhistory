knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
plot(cylinders,mpg)
plot(cylinder,mpg)
plot(cylinders,mpg)
x = c(1, 3, 2, 5)
x
x = c(1, 6, 2)
x
y = c(1, 4, 3)
y
length(x)
length(y)
x+y
ls()
rm(x,y)
rm(list = ls())
ls()
?matrix
x = matrix(data = c(1,2,3,4), nrow = 2, ncol = 2)
x
x = matrix(c(1,2,3,4),2,2)
x
x = matrix(c(1,2,3,4),2,2,byrow = TRUE)
x
sqrt(x)
set.seed(1)
x = rnorm(50)
x
mean(x)
sd(x)
?rnorm
y = x + rnorm(50, mean=50,sd=0.1)
y
cor(x,y)
set.seed(3)
y = rnorm(100)
mean(y)
set.seed(3)
y = rnorm(100)
mean(y)
var(y)
mean(y)
var(y)
sqrt(var(y))
var(y)
sqrt(var(y))
sd(y)
x = rnorm(100)
y = rnorm(100)
plot(x,y)
plot(x,y,xlab = "label for x-axis", ylab = "label for y-axis", main = "Plot of x vs y")
plot(x,y,col = "green")
plot(x,y,xlab = "label for x-axis", ylab = "label for y-axis", main = "Plot of x vs y")
library(ISLR)
plot(cylinders,mpg)
head(auto)
head(Auto)
colnames(Auto)
plot(cylinders, mpg)
plot(Auto$cylinders, Auto$mpg)
plot(cylinders, mpg)
plot(Auto$cylinders, Auto$mpg)
plot(Auto$cylinders, Auto$mpg)
attach(Auto)
plot(cylinders,mpg)
cylinders = as.factor(cylinders)
plot(cylinders,mpg)
plot(cylinders,mpg)
plot(cylinders,mpg, col = "red")
plot(cylinders,mpg, col = "red", varwidth = T)
plot(cylinders,mpg, col = "red", varwidth = T, horizontal = T)
plot(cylinders,mpg, col = "red", varwidth = T)
plot(cylinders,mpg, col = "red", varwidth = T, xlab = "Cylinders", ylab = "MPG")
plot(cylinders,mpg, col = "red", varwidth = T, horizontal = T)
plot(cylinders,mpg, col = "red", varwidth = T, horizontal = F)
hist(mpg)
hist(mpg,col = 2)
hist(mpg,col = "red", breaks = 15)
pairs(Auto)
pairs(~mpg + displacement + horsepower + weight + acceleration, Auto)
pairs(~mpg + displacement + horsepower + weight + acceleration, Auto)
plot(horsepower,mpg)
identify(horsepower,mpg,name)
plot(horsepower,mpg)
identify(horsepower,mpg,name)
plot(horsepower,mpg)
identify(horsepower,mpg,name)
plot(horsepower,mpg)
identify(horsepower,mpg,name)
summary(Auto)
summary(mpg)
A = matrix(1:16,4,4)
A
A[2,3]
A
A[2,3]
A[c(1,3),c(2,4)]
A[1:3,2:4]
A[1:2,]
A[,1:2]
A[1,]
A
A[-c(1,3),]
A
A[-c(1,3),]
dim(A)
Auto = read.table("C:/C/DAT500S/Data/Auto.data")
fix(Auto)
Auto = read.table("C:/C/DAT500S/Data/Auto.data",header = T, na.strings = "?")
fix(Auto)
Auto = read.csv("C:/C/DAT500S/Data/Auto.csv",header = T, na.strings = "?")
fix(Auto)
dim(Auto)
Auto[1:4,]
Auto = na.omit(Auto)
dim(Auto)
reset
reset()
A = matrix(1:9, 3, 3)
A[1,2]
A
A = matrix(1:9,3,3, byrow = TRUE)
A
A[1, 2]
x
x <- c(1, 3, 2, 5)
x
x = c(1, 6, 2)
x
y = c(1, 4, 3)
x + y
length(x)
length(y)
x + y
ls()
rm(list = ls())
?matrix
x <- matrix(data = c(1, 2, 3, 4), nrow = 2, nol = 2)
x <- matrix(data = c(1, 2, 3, 4), nrow = 2, ncol = 2)
x
x <- matrix(c(1, 2, 3, 4), 2, 2)
matrix(c(1, 2, 3, 4), 2, 2, byrow = TRUE)
sqrt(x)
x^2
cor(x, y)
x <- rnorm(50)
y <- x + rnorm(50, mean = 50, sd = .1)
cor(x, y)
set.seed(1303)
rnorm(50)
set.seed(1303)
rnorm(50)
set.seed(1303)
rnorm(50)
set.seed(3)
y <- rnorm(100)
mean(y)
var(y)
sqrt(var(y))
sd(y)
x <- rnorm(100)
x <- rnorm(100)
y <- rnorm(100)
plot(x, y)
plot(x, y, xlab = "this is the x-axis", ylab = "this is the y-axis",
main = "plot of X vs Y")
x <- seq(1, 10)
x
x <- 1:10
x
x <- seq(-pi, pi, length = 50)
x
y <- x
f <- outer(x, y, function(x, y) cos(y) / (1 + x^2))
contour(x, y, f)
contour(x, y, f, nlevels = 45, add = T)
fa <- (f - t(f)) / 2
contour(x, y, fa, nlevels = 15)
image(x, y, fa)
persp(x, y, fa)
persp(x, y, fa, theta = 30)
persp(x, y, fa, theta = 30, phi = 20)
persp(x, y, fa, theta = 30, phi = 70)
A <- matrix(1:16, 4, 4)
A
A[2, 3]
A[c(1, 3), c(2, 4)]
A[1:3, 2:4]
A[1:2, ]
A[, 1:2]
```{r}A[1, ]
A[1, ]
A[-c(1, 3), ]
A[-c(1, 3), -c(1, 3, 4)]
dim(A)
View(Auto)
Auto <<- read.table("Auto.data")
library(ISLR2)
install.package("ISLR2")
install.packages("ISLR2")
library(ISLR2)
library(ISLR2)
Auto <<- read.table("Auto.data")
View(Auto)
head(Auto)
dim(Auto)
dim(Auto)
Auto <- na.omit(Auto)
dim(Auto)
colnames(Auto)
plot(Auto$cylinders, Auto$mpg)
attach(Auto)
plot(cylinders, mpg)
cylinders <- as.factor(cylinders)
plot(cylinders, mpg, col = "red")
plot(cylinders, mpg, col = "red", varwidth = T)
plot(cylinders, mpg, col = "red", varwidth = T, horizontal = T)
plot(cylinders, mpg, col = "red", varwidth = T, horizontal = T)
hist(mpg)
hist(mpg, col = 2, breaks = 15)
pairs(Auto)
pairs(~ mpg + displacement + horsepower + weight + acceleration, data = Auto)
plot(horsepower, mpg)
identify(horsepwoer, mpg, name)
identify(horsepower, mpg, name)
plot.new
identify(horsepower, mpg, name)
identify(horsepower, mpg, name)
plot.new
identify(horsepower, mpg, name)
plot.new
identify(horsepower, mpg, name)
dev.off()
identify(horsepower, mpg, name)
summary(Auto)
summary(mpg)
summary(Auto)
knitr::opts_chunk$set(echo = TRUE)
install.packages("ISLR2")
install.packages("ISLR2")
knitr::opts_chunk$set(echo = TRUE)
library(ISLR2)
View(Auto)
# install.packages("ISLR2")
library(ISLR2)
Auto <- na.omit(Auto)
# install.packages("ISLR2")
library(ISLR2)
Auto <- na.omit(Auto)
dim(Auto)
summary(Auto)
# install.packages("ISLR2")
library(ISLR2)
Auto <- na.omit(Auto)
dim(Auto)
range(mpg)
range(mpg)
attach(Auto)
range(mpg)
attach(Auto)
range(mpg)
range(cylinders)
summary(Auto)
mean(mpg)
sd(mpg)
mean(cylinders)
Auto_subset <- Auto[-c(10, 85)]
range(Auto_subset)
dim(Auto_subset)
# install.packages("ISLR2")
library(ISLR2)
Auto <- na.omit(Auto)
dim(Auto)
dim(Auto)
Auto_subset <- Auto[-c(10, 85), ]
dim(Auto_subset)
attach(Auto_subset)
range(mpg)
range(displacement)
range(horsepower)
range(weight)
range(acceleration)
range(year)
range(origin)
attach(Auto)
pairs(Auto)
Auto = read.csv("/Users/hyeonwooyang/Desktop/Desktop/0_WUSTL/0_Business_Analytics/00_2022_Fall/4_DAT500S_Machine_Learning_Tools_for_Prediction_of_Business_Outcomes/2_Data", header = T, na.strings = "?")
Auto = read.csv("/Users/hyeonwooyang/Desktop/Desktop/0_WUSTL/0_Business_Analytics/00_2022_Fall/4_DAT500S_Machine_Learning_Tools_for_Prediction_of_Business_Outcomes/2_Data/Auto.csv", header = T, na.strings = "?")
Auto <- na.omit(Auto)
dim(Auto)
summary(Auto)
attach(Auto)
range(mpg)
range(cyliners)
attach(Auto)
range(mpg)
range(cylinders)
attach(Auto)
range(mpg)
range(displacement)
range(horsepower)
range(weight)
range(acceleration)
range(year)
range(origin)
View(Auto)
View(Auto)
# View(Auto)
summary(Auto)
# View(Auto)
Auto$cylinders <- factor(Auto$cylinders)
Auto$origin <- factor(Auto$origin)
summary(Auto)
# View(Auto)
Auto$cylinders <- factor(Auto$cylinders)
Auto$year <- factor(Auto$year)
Auto$origin <- factor(Auto$origin)
summary(Auto)
View(Auto)
sapply(Auto[, -c(2, 7, 8, 9)], range)
